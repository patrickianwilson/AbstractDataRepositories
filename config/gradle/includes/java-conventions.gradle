apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: 'maven'

sourceCompatibility = JavaVersion.VERSION_1_7
version = getVersion()
group = "com.wilsonsinquest.data"

def getVersion() {
    if (project.hasProperty("BUILD_NUMBER")) {
        return "0.0.${project.getProperty("BUILD_NUMBER")}" //currently very pre-release
    } else if(System.getenv().containsKey("BUILD_NUMBER")) {
        return "0.0.${System.getenv().get("BUILD_NUMBER")}" //currently very pre-release
    } else {
        return "0.1-local-SNAPSHOT"
    }
}

dependencies {
    compile "org.mortbay.jetty:jetty:6.1.22"
    compile 'cglib:cglib:2.2.2'
    compile 'org.slf4j:slf4j-api:1.6.6'
    runtime 'org.slf4j:slf4j-simple:1.6.6'
    compile 'com.google.guava:guava:14.0.1'
    testCompile 'junit:junit:4.11'
    testCompile 'org.jmock:jmock-junit4:2.6.0'
    testCompile 'org.jmock:jmock-legacy:2.6.0'


}

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }

}

repositories {
    mavenCentral();
    mavenLocal()
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs = ['-Xlint:all', '-Xlint:-deprecation']
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

test {

    ignoreFailures = true
    include "**/*Test.class"
    include "**/*Tests.class"
    exclude "**/Abstract*.class"
    exclude "**/Base*.class"
}

checkstyle {
    ignoreFailures = true
    configProperties = [samedir: "$rootProject.projectDir/checkstyle"]
    configFile = file("$rootProject.projectDir/checkstyle/checkstyle.xml")
}


checkstyleMain {
    classpath += configurations.compile
}
checkstyleTest {
    classpath += configurations.testCompile
}

configurations {
    all*.exclude group: "javax.servlet", module: "servlet-api"
    all*.exclude group: "junit", module: "junit-dep"
}


dependencies{

}

artifacts {
    archives sourcesJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "http://repo.wilsonsinquest.com/nexus/content/repositories/ardm-dev-track/") {
                authentication(userName: project.getProperties().get("nexus.user"), password: project.getProperties().get("nexus.password"))
            }
            pom.version = project.version
            pom.artifactId = project.name
        }
    }
}
